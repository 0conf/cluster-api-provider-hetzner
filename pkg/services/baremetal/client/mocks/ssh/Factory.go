// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	sshclient "github.com/syself/cluster-api-provider-hetzner/pkg/services/baremetal/client/ssh"
)

// Factory is an autogenerated mock type for the Factory type
type Factory struct {
	mock.Mock
}

// NewClient provides a mock function with given fields: _a0
func (_m *Factory) NewClient(_a0 sshclient.Input) sshclient.Client {
	ret := _m.Called(_a0)

	var r0 sshclient.Client
	if rf, ok := ret.Get(0).(func(sshclient.Input) sshclient.Client); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(sshclient.Client)
		}
	}

	return r0
}

type mockConstructorTestingTNewFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewFactory creates a new instance of Factory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFactory(t mockConstructorTestingTNewFactory) *Factory {
	mock := &Factory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
