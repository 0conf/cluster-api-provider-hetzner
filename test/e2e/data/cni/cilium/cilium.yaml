# Created by `make e2e-cilium-templates`
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtsdFUvVEF0eVVJcmtUOHFCUlR2OTR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJd09ERTFOVGt6TmxvWERUSTJNVEl3TnpFMQpOVGt6Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0TVQzUWpxSU4wZmFOMm9NMW9XbEdyb0dJR2RDd2RmUklYV3FCRVBlTTZpRkF3VmEKUEU1V1ZPM1JXMUR4bGhxenBRYTNnZHFDSmlsMnBrNG80WUNxV3R5Z3FYdm9Pd1B2ZFhXUHQ1ZTRGYnJtUXEzNgoxMjM4SUxCcWF3cHBBTmhBeUxFRlZJYkhZS2VwZnNQNmZuellzeWp4MkV3S09Ba1FxeVdZWkRrSnVDRVgwQ09hClk2UHVZUUNVRlZvU3dJTkczZ1h2MVJNTXRRWk8vQ29BUThvcWJSR1YyOU5vdDJBR2lHTkZ1VFRMR1VJbTIyYmMKUStJV2ZORUpPVDQ5SE9nQkxNMlJmNW50MUdGOXFwZURxbkFYUTZHVGUxM3IybmhuY3pmQmJZZDlPRkJsYmVkLwpiSVhndCtLRldkeXI5ajRZNm1WZktoMWEraVlkRThCTm4xRnZud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRkhmblhQMnc1SnQyL1VKRkZTWmlycVg5ZEhITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFh3Tm5HSm4wSEx3UDM2aDFhU1JFSC9oWSt0ZTd4QU1CUzYzMWsweDd6R1c4Q0c0L0RPWVc0CkgzQkhnVEJIRWg1SThtMmlFL2dwWkxBcFNSbk1vRmtqUUYrelhmQzE0RVhST1pRRzc3N3V0aENoYVJ1RGp0UVoKSGFidlZuTlN2S2ovNHluQVdXWE52d0pUU2lpODhlSmE2TFZWZ3B5K3lJcFArdlA2NndMU2I5bm9vTG4rSTBKOAo3Um9JV0h2azlvTlY2K3EzYUl6MU5JRGxwaisyU2tPTUdVTjRSK0xBTXVBeWJmMWNacnhOc2dZOFFyL21ueVlHClhYV3Fxakk2UEw2bnZxaSsvaHhFSjZaTGo4YUVLaHgvMkZ5c0dWM3ZRMEkxSzBYMU1CK1hyT0lGRUJHa3NSZmsKSURrTGNJeWV3aGZnMlB2NEFiRHIwM2J2dVY1dHJDTkQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNE1UM1FqcUlOMGZhTjJvTTFvV2xHcm9HSUdkQ3dkZlJJWFdxQkVQZU02aUZBd1ZhClBFNVdWTzNSVzFEeGxocXpwUWEzZ2RxQ0ppbDJwazRvNFlDcVd0eWdxWHZvT3dQdmRYV1B0NWU0RmJybVFxMzYKMTIzOElMQnFhd3BwQU5oQXlMRUZWSWJIWUtlcGZzUDZmbnpZc3lqeDJFd0tPQWtRcXlXWVpEa0p1Q0VYMENPYQpZNlB1WVFDVUZWb1N3SU5HM2dYdjFSTU10UVpPL0NvQVE4b3FiUkdWMjlOb3QyQUdpR05GdVRUTEdVSW0yMmJjClErSVdmTkVKT1Q0OUhPZ0JMTTJSZjVudDFHRjlxcGVEcW5BWFE2R1RlMTNyMm5obmN6ZkJiWWQ5T0ZCbGJlZC8KYklYZ3QrS0ZXZHlyOWo0WTZtVmZLaDFhK2lZZEU4Qk5uMUZ2bndJREFRQUJBb0lCQVFEUU8wbkNqbzFoZ1d5VgpoK2NxMnBkeDRrTUl4QUZocWZveUlGc0pKb0wxb3JyUGFLY0hWWisvZ0s5REJRTTdoN05FUUt2RFhsYlMyZmowCjYxWU9TL0FHeTMwQVp5MW5keWJoejY3OGJFOTd1akhXTm00OEpNVysxeEZQNTA0T0hVb3ZZMmhIdmJGNlJ2bk0KMmV6NFA5dFdaNmxlTkZ3SE84YTRkOVR0akxZSFlNeWJORHpBa3FnR0dRYytQQnhjU2VCd2M3YnE3ZjhXQS90dwp4OFhVT3FkV1lCZTJBSUZSeXdGdHkyTk1udjQrVjF0RFZham9oUUY5Y0pzd21uU0c4VkxadS8yUkFoR3paZnQ4CmROYXRXY1ZxanVZTXRQTnhQRUt4alpFSkFHa1JrZnJwNGtGR1h0VURxUk9NdG00a3ZoNTBsY0tFaXluREZLQngKeVZQaDl2WlpBb0dCQU9tUmI2YURYOXM3RlByaGxIeWZWYTVKT3ExL2llbEtsUkZYSUhJME5scFZnU2dQZkdGOQp1RjdadXRkRHJWTjFyM1VyYXBvOTRmY2FJRFVrbTUyY2drSEY4eVI1STY5dVdYSTAzNER5aHd2Rkcxa2xWMFlwClBTM2ZDd0NVdUVLNHRod1J4ZXkxVkRKcDl1blE4WllPLzdlNWZkNmdCQnB5Sk9MN3pQQXhxVGlsQW9HQkFQWmIKTTgvRFlLTjI4RWtobkRaZ2tSaWxLMzlUZnN5emFWUXczWmVLRXpXcVhxVXZTU25NY2FyQndsUU9Td2VjaUlXRApaODRjLzBpUzU3VHJuWHlsbmM1TVV2MHNDa2lVU1hJM1pQNHhnWHlDZ2V5d0p1YjRYQUlGRXBhQyszdllPU1IwClFiMVEwSS83Wld0SWN3WUpRcm5Yc0NwVlhHb0dKMzBkdFA4K3N3L3pBb0dCQU0weE5ydzdlQy9hVk5FZThsc1YKZzZsTXJoOFVCNjJMRnpDWHNXcURVaWpFSzJadFRHRTltSWJEa3pCZ1JWb243by9xSjRuL3lZOVRSVzVLamVmRwpRbXpVSVlvdVhscFZnSUVqMENLeGJsQzV4Zy9vRFNjWFBhY1o1c21JM2VQSDhEenlwRVlTK3pnYS9ZOW1QNGNNCkFEMkEyUUtHNDNQMFNWR2IwdXhGUkp2OUFvR0FiV2dwaFY1ZVg1b2xza1N6N0U1TWdlWndmOVpqM0tMYzV4L2cKZVRrL3VMaVYyY1E3T00zcnVRcmRzNWk1WjRMeitsOVdUV29CVVlpMFVGdkhFQ0U1Q1BKS2ROY0hKaDU4MDdXWQpLMjl1OHcyK2g0L2Zadm5yV3BaSUlBSEJqOG1CN3hlV1RtNUNnWDhERm5jUlpoL2N1MDMzbFlWZFNsUzdXc3hECm9vdUUyRk1DZ1lCcEdxTmVVYlFsbHFhc3ByZnRNT3RnYlZaYitEVW5MUGtjZC84bmYyRlBqRkRjamNtMnBlbjEKQ0ZzWExaS2xtMkprUW9qdEt5NVZGRHYxUXhkaGV2V1crOUNKVUJ6VmZ4WHFpM0pweDRlYUp6a1IxWi9xbm5FSQoyMFhDWS9xS29KeE5MNVlJbDBueFM4a3lRYnRoZ2g3RlpqcjBrUU5JV1FPR094MlpyUUYwbkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtsdFUvVEF0eVVJcmtUOHFCUlR2OTR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJd09ERTFOVGt6TmxvWERUSTJNVEl3TnpFMQpOVGt6Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0TVQzUWpxSU4wZmFOMm9NMW9XbEdyb0dJR2RDd2RmUklYV3FCRVBlTTZpRkF3VmEKUEU1V1ZPM1JXMUR4bGhxenBRYTNnZHFDSmlsMnBrNG80WUNxV3R5Z3FYdm9Pd1B2ZFhXUHQ1ZTRGYnJtUXEzNgoxMjM4SUxCcWF3cHBBTmhBeUxFRlZJYkhZS2VwZnNQNmZuellzeWp4MkV3S09Ba1FxeVdZWkRrSnVDRVgwQ09hClk2UHVZUUNVRlZvU3dJTkczZ1h2MVJNTXRRWk8vQ29BUThvcWJSR1YyOU5vdDJBR2lHTkZ1VFRMR1VJbTIyYmMKUStJV2ZORUpPVDQ5SE9nQkxNMlJmNW50MUdGOXFwZURxbkFYUTZHVGUxM3IybmhuY3pmQmJZZDlPRkJsYmVkLwpiSVhndCtLRldkeXI5ajRZNm1WZktoMWEraVlkRThCTm4xRnZud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRkhmblhQMnc1SnQyL1VKRkZTWmlycVg5ZEhITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFh3Tm5HSm4wSEx3UDM2aDFhU1JFSC9oWSt0ZTd4QU1CUzYzMWsweDd6R1c4Q0c0L0RPWVc0CkgzQkhnVEJIRWg1SThtMmlFL2dwWkxBcFNSbk1vRmtqUUYrelhmQzE0RVhST1pRRzc3N3V0aENoYVJ1RGp0UVoKSGFidlZuTlN2S2ovNHluQVdXWE52d0pUU2lpODhlSmE2TFZWZ3B5K3lJcFArdlA2NndMU2I5bm9vTG4rSTBKOAo3Um9JV0h2azlvTlY2K3EzYUl6MU5JRGxwaisyU2tPTUdVTjRSK0xBTXVBeWJmMWNacnhOc2dZOFFyL21ueVlHClhYV3Fxakk2UEw2bnZxaSsvaHhFSjZaTGo4YUVLaHgvMkZ5c0dWM3ZRMEkxSzBYMU1CK1hyT0lGRUJHa3NSZmsKSURrTGNJeWV3aGZnMlB2NEFiRHIwM2J2dVY1dHJDTkQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQ1lEWXZHVXdIVDNNenl3OXprRk1XREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpBNE1UVTFPVE0yV2hjTk1qWXhNakEzTVRVMQpPVE0yV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFENFduR2pGUFYvbnAvY0RQQVJuR1dnNmpUS1Mxb0QKcjI0ZGF4cTZRY3NrOWpsbUpEWmx2UTl0UUxHc210VE5OTVh1OXJxNWFUeWJxVWxESXBvaTlqQlJpd1lWaFJQYQpwTHp5WlpRbml1dUhoMzNKSzd3WEh4c2plNjN3Ymh6V20yb3FLTk0rSHNockJteVNwYk53RjZkSCtobEdZcURhCldGY09tZTlSZHpHOUhEc1VDZFJRbXJOS1BjTEVHaVIrWklZbUVoSjczL1RsdzRkL0grSVlXSnhTNTFaS1paYVgKOG9BM0ovYWlYOVhnV0pjRDR1S2c4dnlwYnRVeUxuN0p0S1BKUHdNQ0dTTndKWk44L1h3dFhnVTVtUjdwSTFRRQplUm95T2FHcy80cTRLaVJOR09YTDZsRWJna0F6RWpIV2ZReWlkZWFMQ1habHU4QU95SndXc2ZJM0FnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZGSGZuWFAydzVKdDIvVUpGRlNaaXJxWAo5ZEhITUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFYVDNVeit0UjlxbUN1R1ZoUzdNbUJpS3dmRHNzVTFJQS9Zb3BJYjRzeEtNVTlaUmsKQ3YzeUJoSmpPTFhhUys4RVpKV0llcWcwb3g4cWpkaUFaYysvRHZBd0I5Ykh3d0dyUVB0K0NyVDBtMjFnSkdCcQpIWThwdlhYdWFObFQzNmluczEwNmVGVkwvR2tYZFk1S0RaakJSRFVSZEVMdkttdURFRmgzM0E3OFlpM21jdzIyClhqdThNaUd2c250VEp6VnZFYjc4TVh3eVZwS0NKK3V0RkdtdWpVNUF3c2VQWEhJcFkvcDNDUElmeEplRGtiRlkKREduZzkwbFJnTnlwYm4ybC9oTXBpVUdPTmtUenBuRU8ycWE4NGkzZDF4TVIyUnVsTkt5VXBZajFubGI3c01FSgpqRWtGRDEwQ0RyTVdtOFlZMWxjVzByUjBWdXpweUF4WldPVnFLQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBK0ZweG94VDFmNTZmM0F6d0VaeGxvT28weWt0YUE2OXVIV3NhdWtITEpQWTVaaVEyClpiMFBiVUN4ckpyVXpUVEY3dmE2dVdrOG02bEpReUthSXZZd1VZc0dGWVVUMnFTODhtV1VKNHJyaDRkOXlTdTgKRng4YkkzdXQ4RzRjMXB0cUtpalRQaDdJYXdac2txV3pjQmVuUi9vWlJtS2cybGhYRHBudlVYY3h2Unc3RkFuVQpVSnF6U2ozQ3hCb2tmbVNHSmhJU2U5LzA1Y09IZngvaUdGaWNVdWRXU21XV2wvS0FOeWYyb2wvVjRGaVhBK0xpCm9QTDhxVzdWTWk1K3liU2p5VDhEQWhramNDV1RmUDE4TFY0Rk9aa2U2U05VQkhrYU1qbWhyUCtLdUNva1RSamwKeStwUkc0SkFNeEl4MW4wTW9uWG1pd2wyWmJ2QURzaWNGckh5TndJREFRQUJBb0lCQVFENEQ3NjVtZEdzNncvWgpoOEt5bEhpZVJkRDh6azdXcDM5aE92MnpWTXhIMnZoeUlYR0VKVmNuVlJzaXdIUVZrOFN3YnhrSzRTWjhoSlo4CnpDOFJCTDQyZEpwYkhGVThhcGVmdGY1SmtPUzR0b2paU3luUUhtM0kvMXc1Ym9LM2lQeDlwOUYzbHQrd3B2WUQKZENiS3E1V1d1eVJMdlcvVko2K3RFZXlNZm5YYjRFTVVQdUczOWp0aEN4ZXJtL1krRjZSNW5JMmc4bHJ5N3NoWQo1SmlHNCtMa1U2M3ZIK1Qxd2RNVFpDaGN2MEdoUm42aEc5cmFodGc0b1hVdzNKTWhtZlhtSVBNMnRvamJCSmU2Ckt2QjlXQ003UFVXOWpoSWxURDl4eGE4cDdoUDhEL3A5Q2xESHhtdjZGV0VZYVJRbmhwK3RsdmM3cFQvSmhiNTEKMjhKenNHY2hBb0dCQVA3OWJQTVAweHEyV3hZUkk3cmhZWCt3c1c1cmkzSVNRMmw0cnRBdlVlMHMzTzNza3JzNQpSUlFYODdNWVA0WURYakg1aUV5Mmcwb1Bjci9LTU1VaGlRV280VTlQYXVwblNVbzNpVENCWGdZTlZzRm1wZlVOCmt3QllvUmVZQU1NSlByQ3hWL2YxeE9sUUVOYWxkRE9OZjMvK2RoeUNDZUs0YldGYjI0QUtDcU1yQW9HQkFQbFcKU2RLaG1HTTR4U2M0b25iVzRsSXVtcG9IMmdLUUltTHJPQXVQcDcwdC9qSjdCYkpnMjBqbmlJRExhQkxLVUxyRQpNMFpJYWVZaHpyb2VraW03UkRIc0oxbzRkREE4c2pvS0xBZVBmdWhHRlljNEMzVnlORkJUdjZ6RHJXV2JxY1dQCkVGdVlvL0diMmUxbStGaUxMbXZ5RkZOUEkrc0lkK2NMelVaSnZwY2xBb0dCQU1hWTFSaytNdm8wR3g5RnZDRmEKVnBpZ0lxRlFxNnZ0bzRsckVDUmZKcHpsK3pCbnVDU1B4MGlPR3lWYTltYkhDcjg3alRmS1V0a0V6U2VwTDNEcAozSkdHNWV6aWV2QVQvOVlKQ1JXNVBHVFVVTVNTMFNEYU1LcnRYSkpHdGhreGd4MFZFdUd5RG1wMURKaFJCdjc3Cjd0amVkRmxod3BkTmN3dUlBcDVuczc4L0FvR0FXSXJzOGxDU1ZnSHQrVXlpWFFOWUlZa05POCszK3BzR3F3d08KdmdSSXMrU21WWFRjaEFqak5sT0taUHBXdmYxOGg2WnU4dkY2TWRBbG9uQ0N4VEVNT1pJOE0wekM3ZkpQOUU1eQpia2psNzBRY0Z3V3ZCQWtIVE5OQXlQQkFIa29XRXVNSUV3NzBnVE13UTU4Q2FDY2MyQmFDWTBkQ1lRK0R6TmVqCkVPZlZOOFVDZ1lBWTRqa2N5UUtsemRjRDQyZkg4eER6bVRvQ3JmM3ozK1ZVamV6cTZnOHZNRUxZNlJwd01ISisKYUNaYlJOdzllR0Juc2FiRmxGdmlmbi9PTmJTWFBDMnVmMEJzdTJSMmpsZy9JazkvWVF5bUVIV01HR1FwaXZabApUaGhacG1QVlZsa1dyQVNBbWsvSFZXT3RaczBtbnUwRkUxQW5oQUlvVzBtM0JMQXpqR2d4M0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtsdFUvVEF0eVVJcmtUOHFCUlR2OTR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJd09ERTFOVGt6TmxvWERUSTJNVEl3TnpFMQpOVGt6Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0TVQzUWpxSU4wZmFOMm9NMW9XbEdyb0dJR2RDd2RmUklYV3FCRVBlTTZpRkF3VmEKUEU1V1ZPM1JXMUR4bGhxenBRYTNnZHFDSmlsMnBrNG80WUNxV3R5Z3FYdm9Pd1B2ZFhXUHQ1ZTRGYnJtUXEzNgoxMjM4SUxCcWF3cHBBTmhBeUxFRlZJYkhZS2VwZnNQNmZuellzeWp4MkV3S09Ba1FxeVdZWkRrSnVDRVgwQ09hClk2UHVZUUNVRlZvU3dJTkczZ1h2MVJNTXRRWk8vQ29BUThvcWJSR1YyOU5vdDJBR2lHTkZ1VFRMR1VJbTIyYmMKUStJV2ZORUpPVDQ5SE9nQkxNMlJmNW50MUdGOXFwZURxbkFYUTZHVGUxM3IybmhuY3pmQmJZZDlPRkJsYmVkLwpiSVhndCtLRldkeXI5ajRZNm1WZktoMWEraVlkRThCTm4xRnZud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRkhmblhQMnc1SnQyL1VKRkZTWmlycVg5ZEhITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFh3Tm5HSm4wSEx3UDM2aDFhU1JFSC9oWSt0ZTd4QU1CUzYzMWsweDd6R1c4Q0c0L0RPWVc0CkgzQkhnVEJIRWg1SThtMmlFL2dwWkxBcFNSbk1vRmtqUUYrelhmQzE0RVhST1pRRzc3N3V0aENoYVJ1RGp0UVoKSGFidlZuTlN2S2ovNHluQVdXWE52d0pUU2lpODhlSmE2TFZWZ3B5K3lJcFArdlA2NndMU2I5bm9vTG4rSTBKOAo3Um9JV0h2azlvTlY2K3EzYUl6MU5JRGxwaisyU2tPTUdVTjRSK0xBTXVBeWJmMWNacnhOc2dZOFFyL21ueVlHClhYV3Fxakk2UEw2bnZxaSsvaHhFSjZaTGo4YUVLaHgvMkZ5c0dWM3ZRMEkxSzBYMU1CK1hyT0lGRUJHa3NSZmsKSURrTGNJeWV3aGZnMlB2NEFiRHIwM2J2dVY1dHJDTkQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUlSN0RUNnlYeXVLVnZMaUtkOFRRMlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJd09ERTFOVGt6TmxvWERUSTJNVEl3TnpFMQpOVGt6Tmxvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtydG1mSUFtQnRSZUtPN2FsVjAKZ0hoaXpFdmNLcks1dldiR2VTRU5nUGcyd3crOW5uN0J5RDY5c1ZYanNBTkIrV2hwZWVueVdvTUNYSzcxektvRwpaa1VFRG9GNVNEamdJZnNwQi8xMnZrYVVSeTdMMTczVFJnWmpKWXpNWDlzS2x6K3FvdHJ5U2lQVzhaUnBreVB1ClBybEZ4VzhBZUtxbkFwcGg0b0tTNndUZEtzeU5uV0dRN3FabHhpaUUyL3I2MDJtdFZ2S0FkTmw0Z3pLVHdiRnUKWWNGV0ZaRWo1b0RPOVQ0VDVJbVh1eGhUcDAzSXp2Yk5XQ25uQVZ0cUxGbHdPNUNjODFOYUEyc2IwQTU5bm5mZQpKTysxYU1VcGxsQWlweGY0M2NMSTN5V0VQY2RKbUlremM2MWZCVnB0MzBQWmVWY2ZvcmVMVyt1ck5ZZVh4Vk9oCjVqY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVVkK2RjL2JEa20zYgo5UWtVVkptS3VwZjEwY2N3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWU1elRBdzZ5WlNha3lMRUZCd3R6TFROQU5YVnUKM0VYWVZSMGNxK1FwUFFGeUo4WTQ2OWpuTTY1N1I4Q09yVERRazlhWk8xWGt2bk56VmI4dUZuelUreVI5bktWbgpFM0pNVkcvUndwYlMySkk5UEp1VTlKOXY0Wm1BYzd2dnZYcEY2YnFtRkx2elJJTDhvSkF0UU0vSlpFQ1BNMndaCmRlUnIwdUJDWmNQbWhDTGFwQXIrV1ZjSnlkWnQ5clNkU1FoUmpnelN2bjBib1hJYzZqR3NvYUpqRlVwajk3MEgKTmJ6WnF6aERMOVhiU1REc1gzY1hKenJzYzUyZWxHcFhmSDJhTE1ySDdSTWdTMUdzUnpxdDg3Y3I5N0Ira2ZFQgo5b01qZDVVdVBmNVNreWVoa3BsaE5lSjlqWWRudGNUUjhOUU85U0UyWnlTMWhrNVV1YVNBL2hGcHhRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBcXUyWjhnQ1lHMUY0bzd0cVZYU0FlR0xNUzl3cXNybTlac1o1SVEyQStEYkRENzJlCmZzSElQcjJ4VmVPd0EwSDVhR2w1NmZKYWd3SmNydlhNcWdabVJRUU9nWGxJT09BaCt5a0gvWGErUnBSSExzdlgKdmROR0JtTWxqTXhmMndxWFA2cWkydkpLSTlieGxHbVRJKzQrdVVYRmJ3QjRxcWNDbW1IaWdwTHJCTjBxekkyZApZWkR1cG1YR0tJVGIrdnJUYWExVzhvQjAyWGlETXBQQnNXNWh3VllWa1NQbWdNNzFQaFBraVplN0dGT25UY2pPCjlzMVlLZWNCVzJvc1dYQTdrSnp6VTFvRGF4dlFEbjJlZDk0azc3Vm94U21XVUNLbkYvamR3c2pmSllROXgwbVkKaVROenJWOEZXbTNmUTlsNVZ4K2l0NHRiNjZzMWg1ZkZVNkhtTndJREFRQUJBb0lCQVFDaWZhbmhrNHNHUFZjdwpYOVJnVkpaazI1ZFhibi93MC80b0cvbSs0RFdBd1o2QjhrTWdRVnY1dVI5Q2hXY29VYW1tQnM5dEJZWGlFWGJHCnBNamh3WityY0lYUnM5aGlxVC9rb2tjRVA4UDNHTExxMjhIR3BYaG1UZzYrWVBPbktkUkxKQTRaa2tmRTltdEcKS1c5RnN4RlIwL0F5N0FIS1NXYUNHUmZhQlkwQ1d5aTA3WGlpYXZUZW1Ob1FGSFVoTzZGczlRdFJoZm8zMTRmQQpGekNOQnZJZVhPRDRMazZuOHpYZ1JpWG5ieXNBdWk4bFlKbTdOZDZmaXllOFhVK2lKMHRuMWp6aHVYUmk0bThMCjlrTkxxYnBhaFQ2elRpN3A5Yy85ekhMVDg1MFZHaG56YXR3a002U0RrTi90WWIxbzVWMnQxMUdXUE91YUNwWkgKdkl5ZEMwR1JBb0dCQU5TU2p6K1Q1TkViZC9FQTVzbWtzbmxmL3NBcUI1R0ppZXVnOGdTeHdrcUF1eEtCNzIvVgo2VlNWYVJ1T21aT05QemlabVpBNkpJTFJNRW04czV1MC9ZTUIzVkxkWTltZXBRR01DeExvQVpPMlpPSWFLMGoxCjZ6dmUzREt2a1Q2dG93OG9FVlpMcUdleG41QkFCRU8rVEhuM20rdnYvM2pkWE0yS25Vb1FTenZqQW9HQkFNM1oKRDZpeDMxVkhmQm05RjltRzdBdEdGU1lnd05SbHNjT0xqZ2RlL0xCSWdkV3F0YVhKNlpLc2cxaVRiTG53bFlleQpXbHhNU2FrMzFaUTEzeEpicUQwVHRhZkdaZmdjYmkrdGorVVN0cEVvT1FKZEVQc1k5bGxBZVRtMHBIQUZJRmR6CmZQOEhhVzZlbHp0ejNnRW15UkdyY2U2NHNjR2MzUjZJdVFQanVPU2RBb0dCQUl2S1hiMjNxbkFCR2wwNDlJeUMKYklQNUp2U0VMem44TXVEcmxIeVYwV2xoUXFTbklpaHZpZVAvNVlFanc4Y095aGFVbkRJR3FtQUU1VFo0aTd6SAp4emRTRUpRZjF6d1RZZnVrZHR2V0NzTnkzT0Q3eUo5UWFZT1R5VWJqd2ladjFaMXdBZ2EzOW1WS245NGkyeXNaCmgvMWxZZnBFZDhLcUFBK0RLbkM4U2wxMUFvR0JBSkpHRGpTSHdQV3VpR2NaMFpySG4zQWJhdWZmR21kVHBGQWEKR09Ed0JJdVgybnJraFpPN3VQaDdFaEtkSUFPNUMraVRPbGFmOXpBQjl3a01odWxhckdCS1l5bEhlQ29vdWJ1egpqNjd0NzBHUzNYL3FkaWlZQW1aRnhGN1hHSXBwZWlQcWN3WWVWRE5CQ3FJNm9hVWIxSUZ6M05BUCtuQmtjVlJEClA0V2VDa0taQW9HQkFLM051NGllV1dPUDF0cGFuKzN4NjZiekZWOHQwWmZza0JvY3RZU1ZOVVZZZTNGT0tuUnYKVHhxdEdKdWFOeFhHcXZueVd2QzQwQzZKTDljQUVMc3JFNXlLakQ4aUZHZDBabGQvYmZmREUzWEFvbUhxdXN5ZwpFZFFJY2JwbUNGWG9FQ3FqcmhSVVlKUEo5QnU5RTB5L01OeFFTdFczTGZRdkhMNFBVS3BITWZOMgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "partial"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    icmp
    http
  enable-hubble-open-metrics: "false"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "2f1de2dd5a93f661c0288a2da0fae12084b3005918722cdc6bfa4c6416525d37"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "$BIN_PATH/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "$BIN_PATH/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "2f1de2dd5a93f661c0288a2da0fae12084b3005918722cdc6bfa4c6416525d37"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.4@sha256:f0f05e4ba3bb1fe0e4b91144fa4fea637701aba02e6c00b23bd03b4a7e1dfd55"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "a54a751d3cf64546dba5b3395687cc09c3b5e47fa7be0877c3b31dcbea6d73ca"
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.4@sha256:ca81622fd9f04c1316bf4144bde5dbce613758810f6022f6c706b14c9c0815db"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34"
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
